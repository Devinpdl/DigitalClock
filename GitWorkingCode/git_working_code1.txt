
DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory
$ git config --global user.name "Samundra_pdl"

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory
$ git config --global user.email "samundra.pdl2000@gmail.com"

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory
$ git config --ls
error: unknown option `ls'
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
user.name=Samundra_pdl
user.email=samundra.pdl2000@gmail.com

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory
$ git config --global core.editor "code"

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory
$ code

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
user.name=Samundra_pdl
user.email=samundra.pdl2000@gmail.com
core.editor=code

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory
$ ls

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory
$ -ls
bash: -ls: command not found

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory
$ --ls
bash: --ls: command not found

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory
$ ls

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory
$ mkdir projects

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory
$ git init
Initialized empty Git repository in D:/Git_folder/Git_work_directory/.git/

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ ls -a
./  ../  .git/  projects/

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ touch file-1.txt

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ touch file-2.txt

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ ls
file-1.txt  file-2.txt  projects/

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file-1.txt
        file-2.txt

nothing added to commit but untracked files present (use "git add" to track)

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ git ls-files

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ git add file-1.txt

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ git add file-2.txt

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   file-1.txt
        new file:   file-2.txt


DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ git ls-files
file-1.txt
file-2.txt

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ git rm --cached file-2.txt
rm 'file-2.txt'

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   file-1.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file-2.txt


DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ git add .

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   file-1.txt
        new file:   file-2.txt


DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ git commit -m "added 2 new dummy files"
[master (root-commit) b60e66f] added 2 new dummy files
 2 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 file-1.txt
 create mode 100644 file-2.txt

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ git status
On branch master
nothing to commit, working tree clean

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$ output.txt
bash: output.txt: command not found

DELL@Redmi-Note-8 MINGW64 /d/Git_folder/Git_work_directory (master)
$
